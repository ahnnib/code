#include <iostream>
#include <string.h>
using namespace std;

#define min -0x3f

int n, m, k;
int mat[52][52] = {};

void sub12() {
    int dp[52][52] = {};
    // dp[1][1] = mat[1][1];
    // memset(dp, -0x3f, sizeof(dp));
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= m; j++)
        {
            // if (dp[i-1][j] != min && dp[i][j-1] != min)
                dp[i][j] = mat[i][j] + max(dp[i-1][j], dp[i][j-1]);
        }
    }
    cout << dp[n][m];
    // for (int i = 1; i <= n; i++) { for (int j = 1; j <= m; j++) cout << dp[i][j] << ' '; cout << '\n'; }
}
void sub3() {}

int main()
{
    #ifndef ONLINE_JUDGE
    #else
    freopen("robot.inp", "r", stdin);
    freopen("robot.out", "w", stdout);
    #endif

    cin >> n >> m >> k;

    for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) cin >> mat[i][j];

    if (k == 0) sub12();
    else sub3();
}
/*
3 4 0
1 2 -1 -1
1 -1 -1 -1
1 1 1 1


11 38 0
2 40 60 27 38 70 -2 63 -29 6 42 20 41 32 49 24 13 0 52 -26 -19 33 45 2 -25 13 47 3 -28 39 -15 -27 69 13 50 45 -6 -17
58 6 -27 -17 -17 17 49 -15 50 2 35 -26 52 28 57 -23 -27 -5 33 -6 -24 -3 41 54 55 44 9 38 60 25 -28 -22 3 -17 -22 61 -14 2
53 -5 -17 -6 -10 -14 9 37 -13 1 5 -8 7 62 6 23 21 70 -5 31 9 46 32 0 -1 -8 8 56 2 -26 26 67 40 -10 -11 23 -14 39
24 7 -22 11 42 15 47 53 -7 29 61 69 -10 -21 -6 54 68 48 61 4 -2 12 0 18 43 16 -13 37 22 21 63 -3 67 27 -12 56 -6 53
-22 25 26 -20 -3 42 31 33 60 37 68 2 24 -1 -28 -25 30 14 -27 5 -14 -23 49 44 0 50 33 2 -5 27 -13 31 -8 24 20 -14 49 15
-10 35 35 29 58 39 -23 4 10 33 -14 2 -23 -29 53 -7 15 20 -18 39 46 50 64 -16 53 36 17 54 52 8 25 57 20 59 55 -14 60 -15
28 20 68 6 -3 17 14 64 -13 42 -26 5 25 3 59 -23 14 37 6 51 -16 12 -8 27 -16 47 12 -20 55 57 22 22 -28 -13 15 47 -1 -16
36 21 9 20 29 24 53 -1 -17 -2 -17 -8 4 -2 31 -15 42 -3 8 34 -26 38 -23 -22 22 5 23 20 66 -26 28 50 56 27 28 66 -11 31
-10 46 62 -20 -7 37 14 28 28 14 30 63 -5 9 59 68 63 12 66 9 15 -24 10 4 56 -12 17 -20 2 56 -20 47 64 -18 32 -27 25 29
53 57 16 3 42 50 33 -27 25 -24 26 44 21 -8 37 50 17 22 26 -7 55 -6 -25 11 37 -7 6 7 -10 8 7 4 12 0 7 7 64 61
64 61 51 33 49 -15 16 -7 61 47 37 6 51 54 67 67 -15 -9 4 -13 -15 42 -5 33 23 1 59 39 48 11 -24 19 43 58 -14 7 -14 36
1746
*/